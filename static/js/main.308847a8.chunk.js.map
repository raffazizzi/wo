{"version":3,"sources":["anchor.svg","WoData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","WoData","props","svgEl","useRef","d3isDone","useState","date","setDate","useEffect","current","base","A","apiKey","allRecords","allExercisesData","stat","show","select","view","eachPage","records","fetchNextPage","concat","err","console","error","fields","r","id","name","get","weight","reps","sets","byDate","reduce","acc","d","has","push","set","Map","forEach","ex","wData","weights","averageWeight","a","b","length","averageReps","averageSets","s","exercise","goalWeight","goalReps","goalSets","flatData","values","Array","from","exPerDate","i","Object","keys","indexOf","svg","d3","width","style","legend","append","attr","text","chart","xScale","range","domain","padding","yScale","scale","call","tickSize","tickFormat","barGroups","selectAll","data","enter","g","replace","loc","on","exclude","classed","this","value","w","aw","toLowerCase","height","next","entries","isLgScreen","useMediaQuery","isMdScreen","containerWidth","dateData","Paper","elevation","Typography","variant","map","e","ei","skippedSets","Math","max","fill","key","marginTop","List","display","flexWrap","flexDirection","us","ui","weightDiff","weightSuccess","repsDiff","repsSuccess","color","isExtraSet","ListItem","flex","ListItemAvatar","Avatar","backgroundColor","textAlign","fontSize","ListItemText","primary","margin","overflowX","overflowY","ref","Container","fixed","createMuiTheme","palette","main","secondary","TabPanel","children","index","other","component","role","hidden","aria-labelledby","Box","p","App","React","setValue","className","href","src","anchor","Tabs","onChange","event","newValue","indicatorColor","centered","Tab","label","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.308847a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/anchor.40fa0fb2.svg\";","import React, {useRef, useEffect, useState} from 'react'\nimport * as A from 'airtable'\nimport * as d3 from 'd3'\nimport Container from '@material-ui/core/Container';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nfunction WoData(props) {\n  \n  const svgEl = useRef(null);\n  const d3isDone = useRef(false)\n  const [date, setDate] = useState('');\n\n  useEffect(() => {\n    // Ensures that d3 DOM operations are only done once.\n    if (d3isDone.current) {\n      return\n    }\n\n    const base = new A({apiKey: 'keyABekhLaYIHre0d'}).base('appQx1tmm4vNz1Zvh');\n    let allRecords = []\n    let allExercisesData = {}\n\n    const stat = props.show\n\n    base('Log').select({\n        view: \"Grid view\"\n    }).eachPage(function page(records, fetchNextPage) {    \n      allRecords = allRecords.concat(records)\n      fetchNextPage()\n\n    }, function done(err) {      \n      if (err) { console.error(err); return; }\n\n      base('Exercises').select({\n        view: \"All\",\n        fields: ['Name', 'Weight', 'Reps', 'Sets']\n      }).eachPage(function page(records, fetchNextPage) {    \n        // allRecords = allRecords.concat(records)\n        for (const r of records) {\n          allExercisesData[r.id] = {\n            name: r.get('Name'),\n            weight: r.get('Weight'),\n            reps: r.get('Reps'),\n            sets: r.get('Sets'),\n          }\n        }\n        fetchNextPage()\n\n      }, function done(err) {\n        if (err) { console.error(err); return; }\n\n        // Average allRecords\n\n        const byDate = allRecords.reduce((acc, r) => {\n          const d = r.get('Date')\n          if (acc.has(d)) {\n            acc.get(d).push(r)\n          } else {\n            acc.set(d, [r])\n          }\n          return acc\n        }, new Map())\n\n        byDate.forEach((r, d) => {\n          byDate.set(d, r.reduce((acc, r) => {\n            const ex = allExercisesData[r.get('Exercise')]\n            if (acc.has(ex.name)) {\n              const wData = acc.get(ex.name)\n              wData.weights.push(r.get('Weight'))\n              wData.averageWeight = wData.weights.reduce((a, b) => a + b, 0) / wData.weights.length\n              wData.reps.push(r.get('Reps'))\n              wData.averageReps = wData.reps.reduce((a, b) => a + b, 0) / wData.reps.length\n              wData.sets.push(r.get('Sets'))\n              wData.averageSets = wData.sets.reduce((s, acc) => acc + s, 0)\n            } else {\n              // Calculate averages\n              acc.set(ex.name, {\n                date: d,\n                exercise: r.get('Exercise'),\n                weights: [r.get('Weight')],\n                averageWeight: r.get('Weight'),\n                goalWeight: ex.weight,\n                reps: [r.get('Reps')],\n                averageReps: r.get('Reps'),\n                goalReps: ex.reps,\n                sets: [r.get('Sets')],\n                averageSets: r.get('Sets'),\n                goalSets: ex.sets,\n              })\n            }\n            return acc\n          }, new Map()))\n        })\n\n        let flatData = []\n        for (const d of byDate.values()) {\n          flatData = flatData.concat(Array.from(d))\n        }\n\n        const exPerDate = flatData.reduce((acc, r, i) => {\n          if (Object.keys(acc).indexOf(r[1].date) === -1) {\n            acc[r[1].date] = [i]\n          } else {\n            acc[r[1].date].push(i)\n          }\n          return acc\n        }, {})\n\n        const svg = d3.select(svgEl.current)\n        const margin = 80;\n        const width = (Array.from(byDate.keys()).length * 180) - 2 * margin;\n        const height = 600 - 2 * margin;\n        svgEl.current.style.width = `${width}px`\n\n        const legend = svg.append(\"g\")\n        legend.append(\"circle\")\n          .attr('class', 'goal')\n          .attr(\"cx\", 60)\n          .attr(\"cy\", 50)\n          .attr(\"r\", 5)\n\n        legend\n          .append('text')\n          .attr('class', 'label')\n          .attr('x', 110)\n          .attr('y', 55)\n          .attr('text-anchor', 'middle')\n          .text(\"Goal met!\")\n\n        legend.append(\"circle\")\n          .attr('class', 'goal nah')\n          .attr(\"cx\", 175)\n          .attr(\"cy\", 50)\n          .attr(\"r\", 5)\n\n        legend\n          .append('text')\n          .attr('class', 'label')\n          .attr('x', 240)\n          .attr('y', 55)\n          .attr('text-anchor', 'middle')\n          .text(\"Goal not met :(\")\n\n        legend.append(\"circle\")\n          .attr('class', 'goal woah')\n          .attr(\"cx\", 325)\n          .attr(\"cy\", 50)\n          .attr(\"r\", 5)\n\n        legend\n          .append('text')\n          .attr('class', 'label')\n          .attr('x', 395)\n          .attr('y', 55)\n          .attr('text-anchor', 'middle')\n          .text(\"Goal exceeded!\")\n\n        const chart = svg.append('g')\n          .attr('transform', `translate(${margin}, ${margin})`);\n          \n        const xScale = d3.scaleBand()\n          .range([0, width])\n          .domain(Array.from(byDate.keys()))\n          .padding(0.45)\n        \n        const yScale = d3.scaleLinear()\n          .range([height, 0])\n          .domain([0, props.scale]);\n\n        const makeYLines = () => d3.axisLeft()\n          .scale(yScale)\n\n        chart.append('g')\n          .attr('transform', `translate(0, ${height})`)\n          .call(d3.axisBottom(xScale));\n\n        chart.append('g')\n          .call(d3.axisLeft(yScale));\n\n        chart.append('g')\n          .attr('class', 'grid')\n          .call(makeYLines()\n            .tickSize(-width, 0, 0)\n            .tickFormat('')\n          )\n\n        const deselectOthers = (exclude) => {\n          svg.selectAll(`:not(${exclude})`)\n            .classed('selected', false)\n        }\n\n        const barGroups = chart.selectAll()\n          .data(flatData)\n          .enter()\n          .append('g')\n\n        barGroups\n          .append('rect')\n          .attr('style', 'fill:#141926; filter:drop-shadow(0px 1px 1px rgba(0, 0, 0, 1))')\n          .attr('class', (g) => {\n            return `${g[0].replace(/ /g, '_')} d${g[1].date}`            \n          })\n          .attr('x', (g, i) => {\n            const date = g[1].date\n            const loc = exPerDate[date].indexOf(i)\n            let d = 0\n            if (loc !== -1) {\n              d = loc\n            }\n            return xScale(date) + (d * 12)\n          })\n          .attr('y', (g) => yScale(g[1][`average${stat}`]))\n          .attr('height', (g) => height - yScale(g[1][`average${stat}`]))\n          .attr('width', 10)\n          .on(\"click\", (g) => {\n            svg.selectAll(`.d${g[1].date}`)\n            .classed('selected', function (d, i) {\n              return d3.select(this).classed('selected', true)\n            })\n            deselectOthers(`.d${g[1].date}`)\n            setDate({value: [g[1].date, byDate.get(g[1].date)]})\n          })\n\n        barGroups\n          .append('circle')\n          .attr('class', (g) => {\n            const w = g[1][`goal${stat}`]\n            const aw = g[1][`average${stat}`]\n            if (aw > w) {\n              return 'goal woah'\n            } else if (aw < w) {\n              return 'goal nah'\n            }\n            return 'goal'\n\n          })\n          .attr(\"cx\", (g, i) => {\n            const date = g[1].date\n            const loc = exPerDate[date].indexOf(i)\n            let d = 0\n            if (loc !== -1) {\n              d = loc\n            }\n            return xScale(date) + (d * 12) + 5\n          })\n          .attr(\"cy\", (g) => yScale(allExercisesData[g[1].exercise][stat.toLowerCase()]))\n          .attr(\"r\", 5)\n        \n          svg\n            .append('text')\n            .attr('class', 'label')\n            .attr('x', -(height / 2) - margin)\n            .attr('y', margin / 2.4)\n            .attr('transform', 'rotate(-90)')\n            .attr('text-anchor', 'middle')\n            .text(stat)\n\n          svg.append('text')\n            .attr('class', 'label')\n            .attr('x', width / 2 + margin)\n            .attr('y', height + margin * 1.7)\n            .attr('text-anchor', 'middle')\n            .text('Training days')\n\n        // Select latest date\n        svg.selectAll(`.d${byDate.keys().next().value}`)\n          .classed('selected', true)\n\n        setDate(byDate.entries().next())\n\n        d3isDone.current = true\n\n      })\n    })\n\n  })\n\n  const isLgScreen = useMediaQuery('(min-width:1200px)');\n  const isMdScreen = useMediaQuery('(min-width:600px)');\n\n  const containerWidth = isLgScreen ? 1000 : isMdScreen ? 600 : 300\n  \n  let sets = 0\n  const dateData = !date ? '' : \n    (\n      <Paper elevation={1} style={{padding: '1em' }}>\n        <Typography variant=\"h3\">Workout of {date.value[0]}</Typography>\n        <Typography variant=\"h6\">Aggregate success report</Typography>\n        {[...date.value[1]].map((e, ei) => {\n          sets = 0\n          const skippedSets = new Array(Math.max(e[1].goalSets - e[1].averageSets, 0)).fill()\n          return ([\n            <Typography key={`ex${ei}`} variant=\"h4\" style={{marginTop: '20px'}}>{e[0]}</Typography>,\n            <div key={`cex${ei}`}>\n              <List style={{display: 'flex', flexWrap: 'wrap', flexDirection: 'row', padding: 0,}}>\n                {e[1].sets.map((us, ui) => {\n                  return Array(us).fill().map((s, i) => {\n                    sets++\n                    const weightDiff = e[1].goalWeight - e[1].weights[ui]\n                    const weightSuccess = weightDiff < 0 \n                      ? 'Green' : weightDiff > 0 ? 'Red' : 'Black'\n                    const repsDiff = e[1].goalReps - e[1].reps[ui]\n                    const repsSuccess = repsDiff < 0 \n                      ? 'Green' : repsDiff > 0 ? 'Red' : 'Black'\n                    let text = (<span><span style={{color: weightSuccess}}>{e[1].weights[ui]}/{e[1].goalWeight}lbs</span><br/>\n                      <span style={{color: repsSuccess}}>{e[1].reps[ui]}/{e[1].goalReps} times</span></span>)\n                    const isExtraSet = sets > e[1].goalSets ? 'Green' : '#a0a0a0'\n                    return (<ListItem key={`l${ui}_${i}`} style={{flex: '25%'}}>\n                      <ListItemAvatar>\n                        <Avatar style={{backgroundColor: isExtraSet, textAlign: 'center', fontSize: '15px'}}>{`Set ${sets}`}</Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary={text} />\n                    </ListItem>)\n                  })\n                })}\n                {skippedSets.map((s, i) => {\n                  sets++\n                  return (<ListItem key={`s${i}`}>\n                    <ListItemAvatar>\n                        <Avatar style={{backgroundColor: 'Red', textAlign: 'center', fontSize: '15px'}}>{`Set ${sets}`}</Avatar>\n                      </ListItemAvatar>\n                    <ListItemText primary={(<span style={{color: 'red'}}>Skipped!</span>)} />\n                  </ListItem>)\n                })}\n              </List>\n            </div>\n          ])\n        })}\n      </Paper>\n    )\n\n  return ([\n    <div key=\"graph\" style={{width: `${containerWidth}px`, height: '600px', margin: 'auto',\n                 backgroundColor: '#01A9DB', overflowX: 'scroll', overflowY: 'hidden'}}>\n      <svg  style={{height: '100%'}}  ref={svgEl} />\n    </div>,\n    <Container fixed key=\"stats\" style={{width: `${containerWidth}px`, margin: 'auto', marginTop: '1em'}}>\n      {dateData}\n    </Container>\n  ])\n}\n\nexport default WoData\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WoData from './WoData';\nimport './App.css';\nimport anchor from './anchor.svg';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#141926'\n    },\n    text: {\n      primary: {\n        main: '#141926'\n      },     \n    },\n    secondary: {\n      main: '#01A9DB',\n    },\n  },\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction App() {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"header\"><a href=\"https://airtable.com/tbl3m3QRI8q9N0n3l/viwh9YqwZxENXZhQV\">\n        <img className=\"anchor\" src={anchor}/></a></div>\n      <Paper>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          centered\n        >\n          <Tab label=\"Weight\"/>\n          <Tab label=\"Reps\"/>\n          <Tab label=\"Sets\"/>\n        </Tabs>\n      </Paper>\n        <div>\n          <TabPanel value={value} index={0}>        \n            <WoData show=\"Weight\" scale=\"140\"/>      \n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <WoData show=\"Reps\" scale=\"20\"/>\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <WoData show=\"Sets\" scale=\"10\"/>\n          </TabPanel>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}