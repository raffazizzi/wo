{"version":3,"sources":["anchor.svg","WoData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","WoData","props","svgEl","useRef","useEffect","base","A","apiKey","allRecords","allExercisesData","stat","show","select","view","eachPage","records","fetchNextPage","concat","err","exPerDate","reduce","acc","r","i","Object","keys","indexOf","get","console","error","fields","id","name","byDate","d","has","push","set","Map","forEach","ex","wData","stats","averageStat","a","b","length","date","exercise","flatData","values","Array","from","svg","d3","current","legend","append","attr","text","chart","xScale","range","domain","padding","yScale","scale","call","tickSize","tickFormat","barGroups","selectAll","data","enter","g","replace","log","w","aw","width","height","style","margin","backgroundColor","ref","createMuiTheme","palette","primary","main","secondary","TabPanel","children","value","index","other","Typography","component","role","hidden","aria-labelledby","Box","p","App","React","useState","setValue","className","href","src","anchor","Paper","Tabs","onChange","event","newValue","indicatorColor","centered","Tab","label","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ae0e033.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/anchor.40fa0fb2.svg\";","import React, {useRef, useEffect} from 'react'\nimport * as A from 'airtable'\nimport * as d3 from 'd3'\n\nfunction WoData(props) {\n  \n  const svgEl = useRef(null)\n\n  useEffect(() => {\n\n    const base = new A({apiKey: 'keyABekhLaYIHre0d'}).base('appQx1tmm4vNz1Zvh');\n    let allRecords = []\n    let allExercisesData = {}\n\n    const stat = props.show\n\n    base('Log').select({\n        view: \"Grid view\"\n    }).eachPage(function page(records, fetchNextPage) {    \n      allRecords = allRecords.concat(records)\n      fetchNextPage()\n\n    }, function done(err) {\n      const exPerDate = allRecords.reduce((acc, r, i) => {\n        if (Object.keys(acc).indexOf(r.get('Date')) === -1) {\n          acc[r.get('Date')] = i\n        }\n        return acc\n      }, {})\n      \n      if (err) { console.error(err); return; }\n\n      base('Exercises').select({\n        view: \"All\",\n        fields: ['Name', stat]\n      }).eachPage(function page(records, fetchNextPage) {    \n        // allRecords = allRecords.concat(records)\n        for (const r of records) {\n          allExercisesData[r.id] = {\n            name: r.get(\"Name\"),\n            stat: r.get(stat)\n          }\n        }\n        fetchNextPage()\n\n      }, function done(err) {\n        if (err) { console.error(err); return; }\n\n        // Average allRecords\n\n        const byDate = allRecords.reduce((acc, r) => {\n          const d = r.get('Date')\n          if (acc.has(d)) {\n            acc.get(d).push(r)\n          } else {\n            acc.set(d, [r])\n          }\n          return acc\n        }, new Map())\n\n        byDate.forEach((r, d) => {\n          byDate.set(d, r.reduce((acc, r) => {\n            const ex = allExercisesData[r.get('Exercise')].name\n            if (acc.has(ex)) {\n              const wData = acc.get(ex)\n              wData.stats.push(r.get(stat))\n              wData.averageStat = wData.stats.reduce((a, b) => a + b, 0) / wData.stats.length\n            } else {\n              // Calculate averages\n              acc.set(ex, {\n                date: d,\n                exercise: r.get('Exercise'),\n                stats: [r.get(stat)],\n                averageStat: r.get(stat)\n              })\n            }\n            return acc\n          }, new Map()))\n        })\n\n        let flatData = []\n        for (const d of byDate.values()) {\n          flatData = flatData.concat(Array.from(d))\n        }\n\n        const svg = d3.select(svgEl.current)\n        const margin = 80;\n        const width = 1000 - 2 * margin;\n        const height = 600 - 2 * margin;\n\n        const legend = svg.append(\"g\")\n        legend.append(\"circle\")\n          .attr('class', 'goal')\n          .attr(\"cx\", 60)\n          .attr(\"cy\", 50)\n          .attr(\"r\", 5)\n\n        legend\n          .append('text')\n          .attr('class', 'label')\n          .attr('x', 110)\n          .attr('y', 55)\n          .attr('text-anchor', 'middle')\n          .text(\"Goal met!\")\n\n        legend.append(\"circle\")\n          .attr('class', 'goal nah')\n          .attr(\"cx\", 175)\n          .attr(\"cy\", 50)\n          .attr(\"r\", 5)\n\n        legend\n          .append('text')\n          .attr('class', 'label')\n          .attr('x', 240)\n          .attr('y', 55)\n          .attr('text-anchor', 'middle')\n          .text(\"Goal not met :(\")\n\n        legend.append(\"circle\")\n          .attr('class', 'goal woah')\n          .attr(\"cx\", 325)\n          .attr(\"cy\", 50)\n          .attr(\"r\", 5)\n\n        legend\n          .append('text')\n          .attr('class', 'label')\n          .attr('x', 395)\n          .attr('y', 55)\n          .attr('text-anchor', 'middle')\n          .text(\"Goal exceeded!\")\n\n        const chart = svg.append('g')\n          .attr('transform', `translate(${margin}, ${margin})`);\n          \n        const xScale = d3.scaleBand()\n          .range([0, width])\n          .domain(Array.from(byDate.keys()))\n          .padding(0.6)\n        \n        const yScale = d3.scaleLinear()\n          .range([height, 0])\n          .domain([0, props.scale]);\n\n        const makeYLines = () => d3.axisLeft()\n          .scale(yScale)\n\n        chart.append('g')\n          .attr('transform', `translate(0, ${height})`)\n          .call(d3.axisBottom(xScale));\n\n        chart.append('g')\n          .call(d3.axisLeft(yScale));\n\n        chart.append('g')\n          .attr('class', 'grid')\n          .call(makeYLines()\n            .tickSize(-width, 0, 0)\n            .tickFormat('')\n          )\n\n        const barGroups = chart.selectAll()\n          .data(flatData)\n          .enter()\n          .append('g')\n\n        barGroups\n          .append('rect')\n          .attr('style', 'fill:#141926; filter:drop-shadow(0px 1px 1px rgba(0, 0, 0, 1))')\n          .attr('class', (g) => {\n            return g[0].replace(/ /g, '_')\n          })\n          .attr('x', (g, i) => {\n            const date = g[1].date\n            console.log(exPerDate[date])\n            // return xScale(date) + 1*i\n            return xScale(date) + ((i-exPerDate[date])*12)\n          })\n          .attr('y', (g) => yScale(g[1].averageStat))\n          .attr('height', (g) => height - yScale(g[1].averageStat))\n          .attr('width', 10)\n\n        barGroups\n          .append('circle')\n          .attr('class', (g) => {\n            const w = allExercisesData[g[1].exercise].stat\n            const aw = g[1].averageStat\n            if (aw > w) {\n              return 'goal woah'\n            } else if (aw < w) {\n              return 'goal nah'\n            }\n            return 'goal'\n\n          })\n          .attr(\"cx\", (g, i) => {\n            const date = g[1].date\n            return (xScale(date) + (i-exPerDate[date])*12) + 5\n          })\n          .attr(\"cy\", (g) => yScale(allExercisesData[g[1].exercise].stat))\n          .attr(\"r\", 5)\n        \n          svg\n            .append('text')\n            .attr('class', 'label')\n            .attr('x', -(height / 2) - margin)\n            .attr('y', margin / 2.4)\n            .attr('transform', 'rotate(-90)')\n            .attr('text-anchor', 'middle')\n            .text(stat)\n\n          svg.append('text')\n            .attr('class', 'label')\n            .attr('x', width / 2 + margin)\n            .attr('y', height + margin * 1.7)\n            .attr('text-anchor', 'middle')\n            .text('Training days')\n\n      })\n    })\n\n  })\n\n  return (\n    <div style={{width: '1000px', height: '600px', margin: 'auto', backgroundColor: '#01A9DB'}}>\n      <svg style={{width: '100%', height: '100%'}} ref={svgEl} />\n    </div>\n  )\n}\n\nexport default WoData\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WoData from './WoData';\nimport './App.css';\nimport anchor from './anchor.svg';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#141926'\n    },\n    text: {\n      primary: {\n        main: '#141926'\n      },     \n    },\n    secondary: {\n      main: '#01A9DB',\n    },\n  },\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction App() {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"header\"><a href=\"https://airtable.com/tbl3m3QRI8q9N0n3l/viwh9YqwZxENXZhQV\">\n        <img className=\"anchor\" src={anchor}/></a></div>\n      <Paper>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          centered\n        >\n          <Tab label=\"Weight\"/>\n          <Tab label=\"Reps\"/>\n          <Tab label=\"Sets\"/>\n        </Tabs>\n      </Paper>\n        <div>\n          <TabPanel value={value} index={0}>        \n            <WoData show=\"Weight\" scale=\"140\"/>      \n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <WoData show=\"Reps\" scale=\"20\"/>\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <WoData show=\"Sets\" scale=\"10\"/>\n          </TabPanel>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}